1. New terminal under new folder, e.g. day-3
2. move to directory under day-3, run: npm init
3. enter information about name/author/etc...
4. automatically generate package.json under day-3 folder
5. run: npm install -g express-generator
 or
   run: npm install express-generator
 to install express generator
6. automatically generate folder: node_modules, then run: express -h
7. run: npx express testapp --no-view
8. automatically generate folder: testapp which contains:
	subfolder: bin/public/routes
	files:app.js/package.json
9. open package.json to confirm "scripts" has "start": "node ./nbin/www" inside to lauch app
10.update app.js to add new router:
	var ordersRouter = require('./routes/orders');
	app.use('/orders', ordersRouter);
11.add orders.js under /routes to control GET/POST renders
12.move to directory testapp under day-3, run: npm install to install dependencies defined in package.json
13.run npm start to lauch the server
14.run npm install -g nodemon
15.run nodemon bin/www  so that you don't need to restart server manually, it will auto-restart by changes under the folder

if meet problem like:
	PS D:\JohnAbbottCollege\WebServiceJS\day-2\myapp> nodemon bin/www
	nodemon : File C:\Users\ewuzhou\AppData\Roaming\npm\nodemon.ps1 cannot be loaded. The file 
	C:\Users\ewuzhou\AppData\Roaming\npm\nodemon.ps1 is not digitally signed. You cannot run this script on the current system. For more       
	information about running scripts and setting execution policy, see about_Execution_Policies at 
	https:/go.microsoft.com/fwlink/?LinkID=135170.
	At line:1 char:1
	+ nodemon bin/www
	+ ~~~~~~~
    	+ CategoryInfo          : SecurityError: (:) [], PSSecurityException
    	+ FullyQualifiedErrorId : UnauthorizedAccess

run command below:
Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser
	or 
	powershell run as adminstrator
16.DB connection
run: npm i mysql (i means install)

_______________________________________________
1.new folder, e.g. day04
2.under day04, run:
npm install -g express-generator
then 
express -h
then 
express --no-view dbapp
3.move to dbapp
4.run: 
npm i mysql

ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';

flush privileges;

npm i cors

npm i -g http-server

http-server -c-1

Update in package.json -> "scripts", could add any script with self defined name, like: test/anyname with script command after
npm run dev  --automatically restart server
npm run start  --manually restart server

npm install crypto-random-string

JOI Validation
	npm i express-joi-validation joi --save
Middleware
	in router/orders.js -> change request handling to next() -> in app.js -> add next() function
Query Params
localhost:3000/heros?age>15